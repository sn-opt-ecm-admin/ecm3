<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_opt_ecm.RCACaseUtils</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>RCACaseUtils</name>
        <script><![CDATA[var RCACaseUtils = Class.create();
RCACaseUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	getDueDate: function() {
		
		var areaForResponse = this.getParameter('sysparm_area_for_response');
		
		var startDate = new GlideDateTime();
		
		var beginDayStr = startDate.getDate().getDisplayValue()+" 00:00:01";
		
		var beginDay = new GlideDateTime();
		beginDay.setDisplayValue(beginDayStr);
		gs.info('beginDay'+beginDay.getDisplayValue());
		
		// next two lines for testing.
		//var dateStr = startDate.getDate().getDisplayValue()+" 07:00:00";
		//startDate.setDisplayValue(dateStr);
		
		var dc = new global.DurationCalculator();
		
		dc.setSchedule('a88e8be0db92a3006fc0a9a5ca9619af', 'US/Central');
		
		if (!dc.isAfter(startDate, '15:59:59')) {
			startDate = beginDay;
			gs.info('setting start date to '+startDate.getDisplayValue());
		}
		dc.setStartDateTime(startDate);
		
		gs.info(dc.schedule.whenNext(startDate,'US/Central'));
		
		// Calculate end time, from number of seconds required in the schedule
		var t;
		if (areaForResponse=='rca')
			t = ((2*8)*60*60); // 2 days of 8 hour shifts each, in seconds
		else
			t = ((8*8)*60*60)+(1*4*60*60); // 8 days of 8 hour shifts each, plus a 1/2 day, in seconds
		
		// this will calculate an end time based on seconds passed in.
		dc.calcDuration(t);
		
		var endTime = dc.getEndDateTime();
		
		return endTime.getDisplayValue();
	},
	
	getTZ: function() {
		var user = gs.getUser();
		var gr = new GlideRecord('sys_user');
		gr.get(user.getID());
		var tz = gr.getValue('time_zone');
		if (gs.nil(tz)) {
			tz = gs.getProperty("glide.sys.default.tz");			
		}
		return tz;
	},
	
	getUser: function() {
		return gs.getUserID();
	},
	
	type: 'RCACaseUtils'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>mike.ward</sys_created_by>
        <sys_created_on>2018-12-10 19:36:16</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>55cf6a69db5e270078019806b99619b8</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>RCACaseUtils</sys_name>
        <sys_package display_value="Escalated Complaint Management" source="x_opt_ecm">d1cfc3484f680b001e6cb4fe0210c7b7</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Escalated Complaint Management">d1cfc3484f680b001e6cb4fe0210c7b7</sys_scope>
        <sys_update_name>sys_script_include_55cf6a69db5e270078019806b99619b8</sys_update_name>
        <sys_updated_by>mike.ward</sys_updated_by>
        <sys_updated_on>2018-12-18 11:58:52</sys_updated_on>
    </sys_script_include>
</record_update>
