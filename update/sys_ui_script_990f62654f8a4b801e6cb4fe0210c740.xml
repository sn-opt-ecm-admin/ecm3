<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ui_script">
    <sys_ui_script action="INSERT_OR_UPDATE">
        <active>true</active>
        <description/>
        <global>false</global>
        <name>x_opt_ecm.RcaOptions</name>
        <script><![CDATA[var x_opt_ecm = x_opt_ecm || {};

x_opt_ecm.RcaOptions = (function() {
	
	"use strict";

	var otherVal = 'Other';
	var otherField = 'other_reason';
	
	function setupField(g_form, field, has_dependencies, has_child_other) {

		g_form.setMandatory(field, has_dependencies);
		g_form.setReadOnly(field, !has_dependencies);

		/*
		if (has_child_other) {
			g_form.addOption(field, otherVal, otherVal);

		} else {
			g_form.removeOption(field, otherVal);
		}
		*/
	}

	return {

		/*******************************************************************
		 * g_form      : a GlideForm
		 * field       : the dependent field to process
		 * isLoading   : is the form still loading?
		 * newValue       : the new value of the parent field
		 * oldValue       : the original value of the parent field
		 *******************************************************************/
		processRcaOptions: function (g_form, field, isLoading, newValue, oldValue) {
			
			//console.log('Field: ' + field + '; newValue: ' + newValue + '; oldValue: ' + oldValue + '; isLoading: ' + isLoading);
			
			if (isLoading) {
				var currentChildValue = g_form.getValue(field);
				setupField(g_form, field, (currentChildValue != ''), (currentChildValue == otherVal));
				return;
			}
			
			
			if (newValue == '') {
				setupField(g_form, field, false, false);
				return;
			}

			var ga = new GlideAjax('RootCauseDependencyChecker');
			ga.addParam('sysparm_name', 'checkRequirements');
			ga.addParam('sysparm_fieldname', field);
			ga.addParam('sysparm_value', newValue);
			ga.getXMLAnswer(function (answer) {

				//console.log('Value ' + newValue + ' had result ' + answer);

				var result = JSON.parse(answer);
				setupField(g_form, field, result.has_dependencies, result.has_child_other);
			});
		},

		type:  "RcaOptions"
	};
})();
]]></script>
        <script_name>RcaOptions</script_name>
        <sys_class_name>sys_ui_script</sys_class_name>
        <sys_created_by>john.daniel</sys_created_by>
        <sys_created_on>2017-10-26 17:01:09</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>990f62654f8a4b801e6cb4fe0210c740</sys_id>
        <sys_mod_count>27</sys_mod_count>
        <sys_name>x_opt_ecm.RcaOptions</sys_name>
        <sys_package display_value="Escalated Complaint Management" source="x_opt_ecm">d1cfc3484f680b001e6cb4fe0210c7b7</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Escalated Complaint Management">d1cfc3484f680b001e6cb4fe0210c7b7</sys_scope>
        <sys_update_name>sys_ui_script_990f62654f8a4b801e6cb4fe0210c740</sys_update_name>
        <sys_updated_by>msaikira</sys_updated_by>
        <sys_updated_on>2018-12-14 10:45:48</sys_updated_on>
        <ui_type>0</ui_type>
        <use_scoped_format>true</use_scoped_format>
    </sys_ui_script>
</record_update>
